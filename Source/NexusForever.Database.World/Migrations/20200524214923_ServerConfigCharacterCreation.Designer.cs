// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NexusForever.Database.World;

namespace NexusForever.Database.World.Migrations
{
    [DbContext(typeof(WorldContext))]
    [Migration("20200524214923_ServerConfigCharacterCreation")]
    partial class ServerConfigCharacterCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NexusForever.Database.World.Model.DisableModel", b =>
                {
                    b.Property<byte>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<uint>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("objectId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<string>("Note")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("note")
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("");

                    b.HasKey("Type", "ObjectId")
                        .HasName("PRIMARY");

                    b.ToTable("disable");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ulong>("ActivePropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("activePropId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("Area")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("area")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<uint>("Creature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creature")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("DisplayInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("displayInfo")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ushort>("Faction1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("faction1")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("Faction2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("faction2")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("OutfitInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("outfitInfo")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<byte>("QuestChecklistIdx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("questChecklistIdx")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<float>("Rx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rx")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Ry")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ry")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Rz")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rz")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<byte>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<ushort>("World")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("world")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("WorldSocketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("worldSocketId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<float>("X")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("x")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Y")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("y")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Z")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("z")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.HasKey("Id");

                    b.ToTable("entity");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntitySplineModel", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<float>("Fx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("fx")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Fy")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("fy")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Fz")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("fz")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<byte>("Mode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("mode")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<float>("Speed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("speed")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<ushort>("SplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("splineId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.HasKey("Id");

                    b.ToTable("entity_spline");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityStatModel", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<byte>("Stat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stat")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<float>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("value")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.HasKey("Id", "Stat")
                        .HasName("PRIMARY");

                    b.ToTable("entity_stats");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorCategoryModel", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("index")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("LocalisedTextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("localisedTextId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id", "Index")
                        .HasName("PRIMARY");

                    b.ToTable("entity_vendor_category");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorItemModel", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("index")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("CategoryIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("categoryIndex")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id", "Index")
                        .HasName("PRIMARY");

                    b.ToTable("entity_vendor_item");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorModel", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<float>("BuyPriceMultiplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("buyPriceMultiplier")
                        .HasColumnType("float")
                        .HasDefaultValue(1f);

                    b.Property<float>("SellPriceMultiplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sellPriceMultiplier")
                        .HasColumnType("float")
                        .HasDefaultValue(1f);

                    b.HasKey("Id");

                    b.ToTable("entity_vendor");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.ServerConfigCharacterCreationLocationModel", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ushort>("CharacterCreationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("characterCreationId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("raceId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("FactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("factionId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<float>("RotationX")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rotationX")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("StartingX")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("locationX")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("StartingY")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("locationY")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("StartingZ")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("locationZ")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<ushort>("WorldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("worldId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("WorldZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("worldZoneId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.HasKey("Id", "CharacterCreationId", "RaceId", "FactionId")
                        .HasName("PRIMARY");

                    b.ToTable("server_config_character_creation_location");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.ServerConfigModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<byte>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.HasKey("Id");

                    b.ToTable("server_config");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreCategoryModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description")
                        .HasColumnType("varchar(150)")
                        .HasDefaultValue("");

                    b.Property<uint>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("index")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(1u);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("");

                    b.Property<uint>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("parentId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(26u);

                    b.Property<byte>("Visible")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("visible")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasDefaultValue((byte)0);

                    b.HasKey("Id");

                    b.HasIndex("ParentId")
                        .HasName("parentId");

                    b.ToTable("store_category");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferGroupCategoryModel", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("categoryId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<byte>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("index")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("Visible")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("visible")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasDefaultValue((byte)1);

                    b.HasKey("Id", "CategoryId")
                        .HasName("PRIMARY");

                    b.HasIndex("CategoryId")
                        .HasName("FK__store_offer_group_category_categoryId__store_category_id");

                    b.ToTable("store_offer_group_category");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferGroupModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description")
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("");

                    b.Property<uint>("DisplayFlags")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("displayFlags")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ushort>("DisplayInfoOverride")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("displayInfoOverride")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("");

                    b.Property<byte>("Visible")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("visible")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasDefaultValue((byte)0);

                    b.HasKey("Id");

                    b.ToTable("store_offer_group");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemDataModel", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ushort>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<uint>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("amount")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(1u);

                    b.Property<uint>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id", "ItemId")
                        .HasName("PRIMARY");

                    b.ToTable("store_offer_item_data");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("groupId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description")
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("");

                    b.Property<uint>("DisplayFlags")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("displayFlags")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<long>("Field6")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("field_6")
                        .HasColumnType("bigint(20)")
                        .HasDefaultValue(0L);

                    b.Property<byte>("Field7")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("field_7")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("");

                    b.Property<byte>("Visible")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("visible")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasDefaultValue((byte)0);

                    b.HasKey("Id", "GroupId")
                        .HasName("PRIMARY");

                    b.HasIndex("GroupId")
                        .HasName("FK__store_offer_item_groupId__store_offer_group_id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("id");

                    b.ToTable("store_offer_item");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemPriceModel", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<byte>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("currencyId")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("DiscountType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("discountType")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<float>("DiscountValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("discountValue")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<long>("Expiry")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("expiry")
                        .HasColumnType("bigint(20)")
                        .HasDefaultValue(0L);

                    b.Property<long>("Field14")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("field_14")
                        .HasColumnType("bigint(20)")
                        .HasDefaultValue(0L);

                    b.Property<float>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("price")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.HasKey("Id", "CurrencyId")
                        .HasName("PRIMARY");

                    b.ToTable("store_offer_item_price");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.TutorialModel", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned")
                        .HasComment("Tutorial ID")
                        .HasDefaultValue(0u);

                    b.Property<uint>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("TriggerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("triggerId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<string>("Note")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("note")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("");

                    b.HasKey("Id", "Type", "TriggerId")
                        .HasName("PRIMARY");

                    b.ToTable("tutorial");
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntitySplineModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.EntityModel", "Entity")
                        .WithOne("EntitySpline")
                        .HasForeignKey("NexusForever.Database.World.Model.EntitySplineModel", "Id")
                        .HasConstraintName("FK__entity_spline_id__entity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityStatModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.EntityModel", "Entity")
                        .WithMany("EntityStat")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__entity_stats_stat_id_entity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorCategoryModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.EntityModel", "Entity")
                        .WithMany("EntityVendorCategory")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__entity_vendor_category_id__entity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorItemModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.EntityModel", "Entity")
                        .WithMany("EntityVendorItem")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__entity_vendor_item_id__entity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.EntityVendorModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.EntityModel", "Entity")
                        .WithOne("EntityVendor")
                        .HasForeignKey("NexusForever.Database.World.Model.EntityVendorModel", "Id")
                        .HasConstraintName("FK__entity_vendor_id__entity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.ServerConfigCharacterCreationLocationModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.ServerConfigModel", "ServerConfig")
                        .WithMany("CharacterCreationLocations")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__server_config_config_id_creation_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferGroupCategoryModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.StoreCategoryModel", "Category")
                        .WithMany("StoreOfferGroupCategory")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__store_offer_group_category_categoryId__store_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NexusForever.Database.World.Model.StoreOfferGroupModel", "OfferGroup")
                        .WithMany("StoreOfferGroupCategory")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__store_offer_group_category_id__store_offer_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemDataModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.StoreOfferItemModel", "OfferItem")
                        .WithMany("StoreOfferItemData")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__store_offer_item_data_id__store_offer_item_id")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.StoreOfferGroupModel", "Group")
                        .WithMany("StoreOfferItem")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__store_offer_item_groupId__store_offer_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.World.Model.StoreOfferItemPriceModel", b =>
                {
                    b.HasOne("NexusForever.Database.World.Model.StoreOfferItemModel", "OfferItem")
                        .WithMany("StoreOfferItemPrice")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__store_offer_item_price_id__store_offer_item_id")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
