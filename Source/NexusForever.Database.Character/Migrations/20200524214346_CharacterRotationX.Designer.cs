// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NexusForever.Database.Character;

namespace NexusForever.Database.Character.Migrations
{
    [DbContext(typeof(CharacterContext))]
    [Migration("20200524214346_CharacterRotationX")]
    partial class CharacterRotationX
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterAchievementModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("achievementId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<uint>("Data0")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data0")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("Data1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("data1")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<DateTime?>("DateCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dateCompleted")
                        .HasColumnType("datetime")
                        .HasDefaultValue(null);

                    b.HasKey("Id", "AchievementId")
                        .HasName("PRIMARY");

                    b.ToTable("character_achievement");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterActionSetAmpModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("SpecIndex")
                        .HasColumnName("specIndex")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<ushort>("AmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ampId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.HasKey("Id", "SpecIndex", "AmpId")
                        .HasName("PRIMARY");

                    b.ToTable("character_action_set_amp");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterActionSetShortcutModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("SpecIndex")
                        .HasColumnName("specIndex")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<ushort>("Location")
                        .HasColumnName("location")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<uint>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("objectId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<byte>("ShortcutType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("shortcutType")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("Tier")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tier")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.HasKey("Id", "SpecIndex", "Location")
                        .HasName("PRIMARY");

                    b.ToTable("character_action_set_shortcut");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterAppearanceModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("Slot")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("slot")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<ushort>("DisplayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("displayId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.HasKey("Id", "Slot")
                        .HasName("PRIMARY");

                    b.ToTable("character_appearance");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterBoneModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("BoneIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("boneIndex")
                        .HasColumnType("tinyint(4) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<float>("Bone")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bone")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.HasKey("Id", "BoneIndex")
                        .HasName("PRIMARY");

                    b.ToTable("character_bone");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterCostumeItemModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("Index")
                        .HasColumnName("index")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("Slot")
                        .HasColumnName("slot")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<int>("DyeData")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dyeData")
                        .HasColumnType("int(10)")
                        .HasDefaultValue(0);

                    b.Property<uint>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id", "Index", "Slot")
                        .HasName("PRIMARY");

                    b.ToTable("character_costume_item");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterCostumeModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("Index")
                        .HasColumnName("index")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<uint>("Mask")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("mask")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.HasKey("Id", "Index")
                        .HasName("PRIMARY");

                    b.ToTable("character_costume");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterCurrencyModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("currencyId")
                        .HasColumnType("tinyint(4) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<ulong>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("amount")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.HasKey("Id", "CurrencyId")
                        .HasName("PRIMARY");

                    b.ToTable("character_currency");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterCustomisationModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<uint>("Label")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("label")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("value")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id", "Label")
                        .HasName("PRIMARY");

                    b.ToTable("character_customisation");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterDatacubeModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("Type")
                        .HasColumnName("type")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<ushort>("Datacube")
                        .HasColumnName("datacube")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<uint>("Progress")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("progress")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id", "Type", "Datacube")
                        .HasName("PRIMARY");

                    b.ToTable("character_datacube");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterEntitlementModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("EntitlementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entitlementId")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<uint>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("amount")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id", "EntitlementId")
                        .HasName("PRIMARY");

                    b.ToTable("character_entitlement");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterKeybindingModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("InputActionId")
                        .HasColumnName("inputActionId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<uint>("Code00")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("code00")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("Code01")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("code01")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("Code02")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("code02")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("DeviceEnum00")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deviceEnum00")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("DeviceEnum01")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deviceEnum01")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("DeviceEnum02")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deviceEnum02")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("EventTypeEnum00")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("eventTypeEnum00")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("EventTypeEnum01")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("eventTypeEnum01")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("EventTypeEnum02")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("eventTypeEnum02")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("MetaKeys00")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("metaKeys00")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("MetaKeys01")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("metaKeys01")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("MetaKeys02")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("metaKeys02")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id", "InputActionId")
                        .HasName("PRIMARY");

                    b.ToTable("character_keybinding");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterMailAttachmentModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<uint>("Index")
                        .HasColumnName("index")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ulong>("ItemGuid")
                        .HasColumnName("itemGuid")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.HasKey("Id", "Index")
                        .HasName("PRIMARY");

                    b.HasIndex("ItemGuid")
                        .IsUnique()
                        .HasName("itemGuid");

                    b.ToTable("character_mail_attachment");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterMailModel", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<uint>("CreatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ulong>("CurrencyAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("currencyAmount")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("CurrencyType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("currencyType")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("DeliveryTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deliveryTime")
                        .HasColumnType("tinyint(8) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("Flags")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("flags")
                        .HasColumnType("tinyint(8) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("HasPaidOrCollectedCurrency")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hasPaidOrCollectedCurrency")
                        .HasColumnType("tinyint(8) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsCashOnDelivery")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isCashOnDelivery")
                        .HasColumnType("tinyint(8) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("Message")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("message")
                        .HasColumnType("varchar(2000)")
                        .HasDefaultValue("");

                    b.Property<ulong>("RecipientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("recipientId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ulong>("SenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("senderId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("SenderType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("senderType")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("subject")
                        .HasColumnType("varchar(200)")
                        .HasDefaultValue("");

                    b.Property<uint>("TextEntryMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("textEntryMessage")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("TextEntrySubject")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("textEntrySubject")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id");

                    b.HasIndex("RecipientId")
                        .HasName("FK__character_mail_recipientId__character_id");

                    b.ToTable("character_mail");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterModel", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<uint>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("accountId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<sbyte>("ActiveCostumeIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("activeCostumeIndex")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValue((sbyte)-1);

                    b.Property<uint>("ActivePath")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("activePath")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<byte>("ActiveSpec")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("activeSpec")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("Class")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("class")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeleteTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deleteTime")
                        .HasColumnType("datetime")
                        .HasDefaultValue(null);

                    b.Property<ushort>("FactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("factionId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<byte>("InnateIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("innateIndex")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<sbyte>("InputKeySet")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("inputKeySet")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValue((sbyte)0);

                    b.Property<DateTime?>("LastOnline")
                        .HasColumnName("lastOnline")
                        .HasColumnType("datetime");

                    b.Property<byte>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("level")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<float>("LocationX")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("locationX")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("LocationY")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("locationY")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("LocationZ")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("locationZ")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("");

                    b.Property<string>("OriginalName")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("originalName")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue(null);

                    b.Property<DateTime>("PathActivatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pathActivatedTimestamp")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<byte>("Race")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("race")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<uint>("RestBonusXp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("restBonusXp")
                        .HasColumnType("int unsigned")
                        .HasDefaultValue(0u);

                    b.Property<float>("RotationX")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rotationX")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<byte>("Sex")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sex")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<uint>("TimePlayedLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("timePlayedLevel")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("TimePlayedTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("timePlayedTotal")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ushort>("Title")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<uint>("TotalXp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("totalXp")
                        .HasColumnType("int unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ushort>("WorldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("worldId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("WorldZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("worldZoneId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .HasName("accountId");

                    b.ToTable("character");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterPathModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("Path")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("path")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("LevelRewarded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("levelRewarded")
                        .HasColumnType("tinyint(4) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<uint>("TotalXp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("totalXp")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<byte>("Unlocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("unlocked")
                        .HasColumnType("tinyint(1) unsigned")
                        .HasDefaultValue((byte)0);

                    b.HasKey("Id", "Path")
                        .HasName("PRIMARY");

                    b.ToTable("character_path");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterPetCustomisationModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<uint>("ObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("objectId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ulong>("FlairIdMask")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("flairIdMask")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(128)")
                        .HasDefaultValue("");

                    b.HasKey("Id", "Type", "ObjectId")
                        .HasName("PRIMARY");

                    b.ToTable("character_pet_customisation");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterPetFlairModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<uint>("PetFlairId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("petFlairId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id", "PetFlairId")
                        .HasName("PRIMARY");

                    b.ToTable("character_pet_flair");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterQuestModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("QuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("questId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<byte>("Flags")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("flags")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<DateTime?>("Reset")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reset")
                        .HasColumnType("datetime")
                        .HasDefaultValue(null);

                    b.Property<byte>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("state")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<uint?>("Timer")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("timer")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(null);

                    b.HasKey("Id", "QuestId")
                        .HasName("PRIMARY");

                    b.ToTable("character_quest");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterQuestObjectiveModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("QuestId")
                        .HasColumnName("questId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<byte>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("index")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<uint>("Progress")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("progress")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint?>("Timer")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("timer")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(null);

                    b.HasKey("Id", "QuestId", "Index")
                        .HasName("PRIMARY");

                    b.ToTable("character_quest_objective");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterSpellModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<uint>("Spell4BaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("spell4BaseId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<byte>("Tier")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tier")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.HasKey("Id", "Spell4BaseId")
                        .HasName("PRIMARY");

                    b.ToTable("character_spell");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterStatModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("Stat")
                        .HasColumnName("stat")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<float>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("value")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.HasKey("Id", "Stat")
                        .HasName("PRIMARY");

                    b.ToTable("character_stats");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterTitleModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("Title")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("title")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<byte>("Revoked")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("revoked")
                        .HasColumnType("tinyint(4) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<uint>("TimeRemaining")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("timeRemaining")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id", "Title")
                        .HasName("PRIMARY");

                    b.ToTable("character_title");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterTradeskillMaterialModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("materialId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("amount")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.HasKey("Id", "MaterialId")
                        .HasName("PRIMARY");

                    b.ToTable("character_tradeskill_materials");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterZonemapHexgroupModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("ZoneMap")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("zoneMap")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("HexGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hexGroup")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.HasKey("Id", "ZoneMap", "HexGroup")
                        .HasName("PRIMARY");

                    b.ToTable("character_zonemap_hexgroup");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.ItemModel", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<uint>("BagIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bagIndex")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("Charges")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("charges")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<float>("Durability")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("durability")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<uint>("ExpirationTimeLeft")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("expirationTimeLeft")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ushort>("Location")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("location")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ulong?>("OwnerId")
                        .HasColumnName("ownerId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(null);

                    b.Property<uint>("StackCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stackCount")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .HasName("FK__item_ownerId__character_id");

                    b.ToTable("item");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.ResidenceDecor", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ulong>("DecorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("decorId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("ColourShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("colourShiftId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<uint>("DecorInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("decorInfoId")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<ulong>("DecorParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("decorParentId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<uint>("DecorType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("decorType")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u);

                    b.Property<uint>("PlotIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("plotIndex")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(2147483647u);

                    b.Property<float>("Qw")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("qw")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Qx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("qx")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Qy")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("qy")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Qz")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("qz")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Scale")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("scale")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("X")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("x")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Y")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("y")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.Property<float>("Z")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("z")
                        .HasColumnType("float")
                        .HasDefaultValue(0f);

                    b.HasKey("Id", "DecorId")
                        .HasName("PRIMARY");

                    b.ToTable("residence_decor");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.ResidenceModel", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<ushort>("DoorDecorInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("doorDecorInfoId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("EntrywayDecorInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrywayDecorInfoId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("Flags")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("flags")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<byte>("GardenSharing")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gardenSharing")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<ushort>("GroundWallpaperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("groundWallpaperId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("MusicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("musicId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("");

                    b.Property<ulong>("OwnerId")
                        .HasColumnName("ownerId")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("PrivacyLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("privacyLevel")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("PropertyInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("propertyInfoId")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("ResourceSharing")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("resourceSharing")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<ushort>("RoofDecorInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("roofDecorInfoId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("SkyWallpaperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("skyWallpaperId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<ushort>("WallpaperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("wallpaperId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.HasKey("Id");

                    b.HasIndex("OwnerId")
                        .IsUnique()
                        .HasName("ownerId");

                    b.ToTable("residence");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.ResidencePlotModel", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnName("id")
                        .HasColumnType("bigint(20) unsigned")
                        .HasDefaultValue(0ul);

                    b.Property<byte>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("index")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("BuildState")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("buildState")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<ushort>("PlotInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("plotInfoId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.Property<byte>("PlugFacing")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("plugFacing")
                        .HasColumnType("tinyint(3) unsigned")
                        .HasDefaultValue((byte)0);

                    b.Property<ushort>("PlugItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("plugItemId")
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)0);

                    b.HasKey("Id", "Index")
                        .HasName("PRIMARY");

                    b.ToTable("residence_plot");
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterAchievementModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Achievement")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_achievement_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterActionSetAmpModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("ActionSetAmp")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_action_set_amp_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterActionSetShortcutModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("ActionSetShortcut")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_action_set_shortcut_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterAppearanceModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Appearance")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_appearance_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterBoneModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Bone")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK_character_bone_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterCostumeItemModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterCostumeModel", "Costume")
                        .WithMany("CostumeItem")
                        .HasForeignKey("Id", "Index")
                        .HasConstraintName("FK__character_costume_item_id-index__character_costume_id-index")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterCostumeModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Costume")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_costume_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterCurrencyModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Currency")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK_character_currency_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterCustomisationModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Customisation")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_customisation_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterDatacubeModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Datacube")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_datacube_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterEntitlementModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Entitlement")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_entitlement_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterKeybindingModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Keybinding")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_keybinding_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterMailAttachmentModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterMailModel", "Mail")
                        .WithMany("Attachment")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_mail_attachment_id__character_mail_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NexusForever.Database.Character.Model.ItemModel", "Item")
                        .WithOne("MailAttachment")
                        .HasForeignKey("NexusForever.Database.Character.Model.CharacterMailAttachmentModel", "ItemGuid")
                        .HasConstraintName("FK__character_mail_attachment_itemGuid__item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterMailModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Recipient")
                        .WithMany("Mail")
                        .HasForeignKey("RecipientId")
                        .HasConstraintName("FK__character_mail_recipientId__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterPathModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Path")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_path_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterPetCustomisationModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("PetCustomisation")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_pet_customisation_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterPetFlairModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("PetFlair")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_pet_flair_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterQuestModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Quest")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_quest_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterQuestObjectiveModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterQuestModel", "Quest")
                        .WithMany("QuestObjective")
                        .HasForeignKey("Id", "QuestId")
                        .HasConstraintName("FK__character_quest_objective_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterSpellModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Spell")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_spell_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterStatModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Stat")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_stats_stat_id_character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterTitleModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("CharacterTitle")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_title_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterTradeskillMaterialModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("TradeskillMaterials")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_tradeskill_material_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.CharacterZonemapHexgroupModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("ZonemapHexgroup")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__character_zonemap_hexgroup_id__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.ItemModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithMany("Item")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK__item_ownerId__character_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.ResidenceDecor", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.ResidenceModel", "Residence")
                        .WithMany("Decor")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__residence_decor_id__residence_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.ResidenceModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.CharacterModel", "Character")
                        .WithOne("Residence")
                        .HasForeignKey("NexusForever.Database.Character.Model.ResidenceModel", "OwnerId")
                        .HasConstraintName("FK__residence_ownerId__character_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NexusForever.Database.Character.Model.ResidencePlotModel", b =>
                {
                    b.HasOne("NexusForever.Database.Character.Model.ResidenceModel", "Residence")
                        .WithMany("Plot")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__residence_plot_id__residence_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
